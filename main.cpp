#include <iostream>
#include "AES_CMAC.hpp"

// 6bc1bee2 2e409f96 e93d7e11 7393172a ae2d8a57 1e03ac9c 9eb76fac 45af8e51 30c81c46 a35ce411 
// e5fbc119 1a0a52ef f69f2445 df4f9b17 ad2b417b e66c3710
std::vector<unsigned char> in = { 0x6b, 0xc1, 0xbe, 0xe2, 0x2e, 0x40, 0x9f, 0x96,
                                  0xe9, 0x3d, 0x7e, 0x11, 0x73, 0x93, 0x17, 0x2a,
                                  0xae, 0x2d, 0x8a, 0x57, 0x1e, 0x03, 0xac, 0x9c,
								  0x9e, 0xb7, 0x6f, 0xac, 0x45, 0xaf, 0x8e, 0x51,
                                  0x30, 0xc8, 0x1c, 0x46, 0xa3, 0x5c, 0xe4, 0x11,
								  0xe5, 0xfb, 0xc1, 0x19, 0x1a, 0x0a, 0x52, 0xef,
								  0xf6, 0x9f, 0x24, 0x45, 0xdf, 0x4f };

std::vector<unsigned char> in1;

// 2b7e1516 28aed2a6 abf71588 09cf4f3c
const std::vector<unsigned char> KEY = { 0x2b, 0x7e, 0x15, 0x16, 0x28, 0xae, 0xd2, 0xa6,
					                     0xab, 0xf7, 0x15, 0x88, 0x09, 0xcf, 0x4f, 0x3c };

int main(int argc, char* argv[])
{
	AES cipher(AESKeyLength::AES_128);
	AesCmac calculator(cipher, KEY);

	std::vector<byte> cmac_tag = calculator.generateCmac(in);

	printf("CMAC TAG: ");
	for (auto b : cmac_tag)
	{
		printf("%02X", b);
	}
	printf("\n");
}